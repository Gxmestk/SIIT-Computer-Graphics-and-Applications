#include <windows.h>
#include<GL/glut.h>
#include<stdio.h>
#include <time.h>
#define RED 1
#define GREEN 2
#define BLUE 3
#define BLACK 4
#define BLACK_PURPLE 4
#define YELLOW 6
#define PURPLE 7
bool black=true;
bool flag;
float angle=0, dangle=0.05;
float red=0.0, green=0.0, blue=0.0;
int swidth=500,sheight=500;
float ratio= (float)swidth/(float)sheight;
void output_Text(float x, float y, float z, char *text) //output a text at x,y
{
    int len, i;
    glRasterPos3f(x, y, z);
    len = (int)strlen(text);
    for (i = 0; i < len; i++)
    {
        glutBitmapCharacter(GLUT_BITMAP_8_BY_13, text[i]);
    }
}
void Display_TeaPot()
{
    glColor3d(red,green,blue); // the rgb color
    glPushMatrix();
    glRotated(angle,0,1,1); //rotate around 0,1,1
    glutWireTeapot(1.0); // the teapot
    glPopMatrix();
    glutSwapBuffers();
}
void init(void)
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(60, ratio,0.1,1000);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    gluLookAt(0.0,0.0,3.0,
              0.0,0.0,0.0,
              0.0,1.0,0.0);

}
void Text_Menu()
{
    output_Text(-0.5,1.5,0,"Right click for the menu.");
    if (black)
    {
        glColor3f(0,0,0);
        output_Text(-0.5,1.3,0,"Black");
    }
    else
    {
        glColor3f(0.5,0,1);
        output_Text(-0.5,1.3,0,"Purple");
    }
}
void myDisplay(void)
{
    glClearColor(1,1,1,0);
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    Text_Menu();
    Display_TeaPot();
    angle+=dangle;
}
void processMenuStatus(int status, int x, int y)
{
    if (status == GLUT_MENU_IN_USE)
        flag = true;
    else
        flag = false;
}
void Change_Menu(int c, int x, int y)
{
    if ((c == GLUT_KEY_F1)&&(!flag)) // F1 pressed and menu is not in use
    {
        if (black)
        {
            glutChangeToMenuEntry(BLACK_PURPLE, "*Purple",PURPLE);
            black=false;
        }
        else
        {
            glutChangeToMenuEntry(BLACK_PURPLE,"*Black",BLACK);
            black=true;
        }
    }
}
void processMenuEvents(int option) //option is the menu item # generated by the menu
{
    switch (option) //red green blue are global variables
    {

    case RED :
        red = 1.0;
        green = 0.0;
        blue = 0.0;
        break;
    case GREEN :
        red = 0.0;
        green = 1.0;
        blue = 0.0;
        break;
    case BLUE :
        red = 0.0;
        green = 0.0;
        blue = 1.0;
        break;
    case BLACK :
        red = 0.0;
        green = 0.0;
        blue = 0.0;
        break;//
    case YELLOW :
        red = 1.0;
        green = 1.0;
        blue = 0.0;
        break;
    case PURPLE:
        red = 0.5;
        green = 0.0;
        blue = 1.0;
        break;//
    }
}
void createGLUTMenus() //create menus
{
    int menu=glutCreateMenu(processMenuEvents);//call processMenuEvents on menu click
    glutAddMenuEntry("Red",RED);
    glutAddMenuEntry("Blue",BLUE);
    glutAddMenuEntry("Green",GREEN);
    glutAddMenuEntry("*Black",BLACK);//4
    glutAddMenuEntry("Yellow",YELLOW);
    glutAttachMenu(GLUT_RIGHT_BUTTON);
}
int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA);
    glutInitWindowPosition(100,100);
    glutInitWindowSize(swidth,sheight);
    glutCreateWindow("Example M6 changing menus ");
    init();
    glutDisplayFunc(myDisplay);
    glutIdleFunc(myDisplay);
    glutSpecialFunc(Change_Menu);
    createGLUTMenus();
    glutMainLoop();
    return 0;
}
